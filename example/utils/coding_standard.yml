# config updated on 21-03-2018
# latest docs: https://rubocop.readthedocs.io/en/latest/cops/

# ####### Usage #######

# run scan
# rubocop -c coding_standard.yml

# run auto fix
# rubocop -a -c coding_standard.yml

Documentation:
  Description: Checks for missing top-level documentation of classes and modules.\
    Classes with no body are exempt from the check and so are namespace modules -\
    modules that have nothing in their bodies except classes, other modules, or constant definitions.
  Enabled: false

# Supports --auto-correct.
DefEndAlignment:
  Description: Checks whether the end keywords of method definitions are aligned properly.
  Enabled: true

ParenthesesAsGroupedExpression:
  Description: Checks for method calls with a space before the opening parenthesis.
  Enabled: true

UselessAssignment:
  Description: Checks for useless assignment to a local variable.
  Enabled: true

AbcSize:
  Description: Checks that the ABC size of methods is not higher than the configured maximum.\
    The ABC size is based on assignments, branches (method calls), and conditions.
  Max: 107
  Enabled: true

BlockNesting:
  Description: Avoid excessive block nesting
  Enabled: true
  Max: 3

# Configuration parameters: CountComments.
ClassLength:
  Description: Checks if the length a class exceeds some maximum value. Comment lines can optionally be ignored.
  Max: 150
  Enabled: true
  CountComments: false

CyclomaticComplexity:
  Description: Checks that the cyclomatic complexity of methods is not higher than the configured maximum.\
    The cyclomatic complexity is the number of linearly independent paths through a method.\
    The algorithm counts decision points and adds one.\
    An if statement (or unless or ?:) increases the complexity by one. An else branch does not,\
    since it doesn't add a decision point.\
    The && operator (or keyword and) can be converted to a nested if statement,\
    and ||/or is shorthand for a sequence of ifs, so they also add one.\
    Loops can be said to have an exit condition, so they add one.
  Max: 20
  Enabled: true

LineLength:
  Description: Limit lines to 120 characters.
  Max: 120
  Enabled: true

# Configuration parameters: CountComments.
MethodLength:
  Description: Avoid methods longer than 25 lines of code.
  Max: 25
  Enabled: true
  CountComments: false

BlockLength:
  Description: Checks if the length of a block exceeds some maximum value. Comment lines can optionally be ignored.\
    The maximum allowed length is configurable. The cop can be configured to ignore blocks passed to certain methods.
  Max: 25
  Enabled: true

PerceivedComplexity:
  Description: Tries to produce a complexity score that's a measure of the complexity the reader\
    experiences when looking at a method.\
    For that reason it considers `when` nodes as something that doesn't add as much complexity as an `if` or a `&&`.\
    Except if it's one of those special `case`/`when` constructs where there's no expression after `case`.\
    Then the cop treats it as an `if`/`elsif`/`elsif`â€¦ and lets all the `when` nodes count.\
    In contrast to the CyclomaticComplexity cop, this cop considers `else` nodes as adding complexity.
  Max: 20
  Enabled: true

Send:
  Description: Checks for the use of the send method.
  Enabled: true

AccessorMethodName:
  Description: Makes sure that accessor methods are named properly.
  Enabled: true

# Supports --auto-correct.
BarePercentLiterals:
  Description: Checks if usage of %() or %Q() matches configuration.
  Enabled: true

# Supports --auto-correct.
CommentIndentation:
  Description: Checks the indentation of comments.
  Enabled: true

# Supports --auto-correct.
EmptyLines:
  Description: Don't use several empty lines in a row.
  Enabled: true

# Supports --auto-correct.
# Configuration parameters: EnforcedStyle, SupportedStyles.
EmptyLinesAroundBlockBody:
  Description: Checks if empty lines around the bodies of blocks match the configuration..
  Enabled: true

# Supports --auto-correct.
# Configuration parameters: EnforcedStyle, SupportedStyles.
EmptyLinesAroundClassBody:
  Description: Checks if empty lines around the bodies of classes match the configuration.
  Enabled: true

# Supports --auto-correct.
EmptyLinesAroundMethodBody:
  Description: Checks if empty lines exist around the bodies of methods.
  Enabled: true

# Supports --auto-correct.
EmptyLinesAroundModuleBody:
  Description: Checks if empty lines around the bodies of modules match the configuration.
  Enabled: true

# Supports --auto-correct.
# Configuration parameters: AllowForAlignment.
ExtraSpacing:
  Description: Checks for extra/unnecessary whitespace.
  Enabled: true

# Configuration parameters: MinBodyLength.
GuardClause:
  Description: Check for conditionals that can be replaced with guard clauses
  Enabled: true

# Supports --auto-correct.
# Configuration parameters: SupportedStyles, UseHashRocketsWithSymbolValues.
HashSyntax:
  Description: Checks hash literal syntax.
  Enabled: false

# Supports --auto-correct.
IfUnlessModifier:
  Description: Favor modifier if/unless usage when you have a single-line body.
  Enabled: true

# Supports --auto-correct.
# Configuration parameters: EnforcedStyle, SupportedStyles.
IndentationConsistency:
  Description: Checks for inconsistent indentation.
  Enabled: true

# Supports --auto-correct.
IndentationWidth:
  Description: Use 2 spaces for indentation.
  Enabled: true

# Supports --auto-correct.
LeadingCommentSpace:
  Description: Comments should start with a space.
  Enabled: true

Next:
  Description: Use `next` to skip iteration instead of a condition at the end.
  Enabled: true

# Supports --auto-correct
NilComparison:
  Description: Prefer x.nil? to x == nil.
  Enabled: true

# Supports --auto-correct
ParenthesesAroundCondition:
  Description: Don't use parentheses around the condition of an if/unless/while.
  Enabled: true
  AllowSafeAssignment: true

# Supports --auto-correct.
# Configuration parameters: EnforcedStyle, SupportedStyles.
PercentQLiterals:
  Description: Checks for usage of the %Q() syntax when %q() would do.
  Enabled: true

RegexpLiteral:
  Description: Use %r for regular expressions matching more than `MaxSlashes` '/' characters.
    Use %r only for regular expressions matching more than `MaxSlashes` '/' character.
  Enabled: true

# Supports --auto-correct
SpaceBeforeFirstArg:
  Description: Checks that exactly one space is used between a method name and the first
    argument for method calls without parentheses.
  Enabled: true

# Supports --auto-correct.
# Configuration parameters: EnforcedStyleInsidePipes, SupportedStyles.
SpaceAroundBlockParameters:
  Description: Checks the spacing inside and after block parameters pipes.
  Enabled: true

SpaceAfterSemicolon:
  Description: Checks for semicolon (;) not followed by some kind of space.
  Enabled: true

# Supports --auto-correct
SpaceAroundOperators:
  Description: Use spaces around operators.
  Enabled: true

# Supports --auto-correct
SpaceInsideParens:
  Description: No spaces after ( or before ).
  Enabled: true

SpaceInsideStringInterpolation:
  Description: Checks for whitespace within string interpolations.
  Enabled: true

SpaceInsideRangeLiteral:
  Description: Checks for spaces inside range literals.
  Enabled: true

# Supports --auto-correct
SpaceInsideHashLiteralBraces:
  Description: Use spaces inside hash literal braces - or don't.
  Enabled: true
  EnforcedStyle: no_space
  EnforcedStyleForEmptyBraces: no_space
  SupportedStyles:
  - space
  - no_space

# Supports --auto-correct
StringLiterals:
  Description: Checks if uses of quotes match the configured preference.
  Enabled: false
  EnforcedStyle: single_quotes
  SupportedStyles:
  - single_quotes
  - double_quotes

StringMethods:
  Description: Enforces the use of consistent method names from the String class.
  Enabled: true

Tab:
  Description: No hard tabs.
  Enabled: true

# Supports --auto-correct
TrailingBlankLines:
  Description: Checks for superfluous trailing blank lines.
  Enabled: true

# Supports --auto-correct
TrailingWhitespace:
  Description: Avoid trailing whitespace.
  Enabled: true

GlobalVars:
  Description: Do not introduce global variables.
  Enabled: true

UnlessElse:
  Description: Never use unless with else. Rewrite these with the positive case first.
  Enabled: true

# Supports --auto-correct
WhenThen:
  Description: Use when x then ... for one-line cases.
  Enabled: true

# ############################# #
# ######## 2018 update ######## #
# ############################# #

ClassAndModuleCamelCase:
  Description: Use CamelCase for classes and modules.
  Enabled: true

# Supports --auto-correct
ClassMethods:
  Description: Use self when defining module/class methods.
  Enabled: true

ClassVars:
  Description: Avoid the use of class variables.
  Enabled: true

# Supports --auto-correct
CollectionMethods:
  Description: Preferred collection methods.
  Enabled: true
  PreferredMethods:
    collect: map
    collect!: map!
    inject: inject
    detect: find
    find_all: select

ColonMethodCall:
  Description: ! 'Do not use :: for method call.'
  Enabled: true

CommentAnnotation:
  Description: Checks formatting of special comments (TODO, FIXME, OPTIMIZE, HACK, REVIEW).
  Enabled: true
  Keywords:
  - TODO
  - FIXME
  - OPTIMIZE
  - HACK
  - REVIEW

ConstantName:
  Description: Constants should use SCREAMING_SNAKE_CASE.
  Enabled: true

# Supports --auto-correct
DefWithParentheses:
  Description: Use def with parentheses when there are arguments.
  Enabled: true

DotPosition:
  Description: Checks the position of the dot in multi-line method calls.
  Enabled: true
  EnforcedStyle: leading
  SupportedStyles:
  - leading
  - trailing

# Supports --auto-correct
EmptyLineBetweenDefs:
  Description: Use empty lines between defs.
  Enabled: true
  AllowAdjacentOneLineDefs: false

EmptyLinesAroundAccessModifier:
  Description: Keep blank lines around access modifiers.
  Enabled: true

# Supports --auto-correct
EmptyLiteral:
  Description: Prefer literals to Array.new/Hash.new/String.new.
  Enabled: true

EndBlock:
  Description: Avoid the use of END blocks.
  Enabled: true

EvenOdd:
  Description: Favor the use of Fixnum#even? && Fixnum#odd?
  Enabled: true

FileName:
  Description: Use snake_case for source file names.
  Enabled: true
  Exclude:
  - Rakefile
  - Gemfile
  - Capfile

FlipFlop:
  Description: Checks for flip flops
  Enabled: true

For:
  Description: Checks use of for or each in multiline loops.
  Enabled: true
  EnforcedStyle: each
  SupportedStyles:
  - for
  - each

IfWithSemicolon:
  Description: Never use if x; .... Use the ternary operator instead.
  Enabled: true

# Supports --auto-correct
IndentArray:
  Description: Checks the indentation of the first element in an array literal.
  Enabled: true

# Supports --auto-correct
IndentHash:
  Description: Checks the indentation of the first key in a hash literal.
  Enabled: true
  EnforcedStyle: special_inside_parentheses
  SupportedStyles:
  - special_inside_parentheses
  - consistent

Lambda:
  Description: Use the new lambda literal syntax for single-line blocks.
  Enabled: true

# Supports --auto-correct
LineEndConcatenation:
  Description: Use \\ instead of + to concatenate two string literals at line end.
  Enabled: true

# Supports --auto-correct
MethodCallWithoutArgsParentheses:
  Description: Do not use parentheses for method calls with no arguments.
  Enabled: true

MethodCalledOnDoEndBlock:
  Description: Avoid chaining a method call on a do...end block.
  Enabled: false

MethodName:
  Description: Use the configured style when naming methods.
  Enabled: true
  EnforcedStyle: snake_case
  SupportedStyles:
  - snake_case
  - camelCase

ModuleFunction:
  Description: Checks for usage of `extend self` in modules.
  Enabled: true

MultilineBlockChain:
  Description: Avoid multi-line chains of blocks.
  Enabled: true

MultilineIfThen:
  Description: Never use then for multi-line if/unless.
  Enabled: true

MultilineTernaryOperator:
  Description: ! 'Avoid multi-line ?: (the ternary operator); use if/unless instead.'
  Enabled: true

# Supports --auto-correct
NegatedIf:
  Description: Favor unless over if for negative conditions (or control flow or).
  Enabled: true

# Supports --auto-correct
NegatedWhile:
  Description: Favor until over while for negative conditions.
  Enabled: true

NestedTernaryOperator:
  Description: Use one expression per branch in a ternary operator.
  Enabled: true

# Supports --auto-correct
NonNilCheck:
  Description: Checks for redundant nil checks.
  Enabled: true

# Supports --auto-correct
Not:
  Description: Use ! instead of not.
  Enabled: true

# Supports --auto-correct
NumericLiterals:
  Description: Add underscores to large numeric literals to improve their readability.
  Enabled: true
  MinDigits: 5

OneLineConditional:
  Description: Favor the ternary operator(?:) over if/then/else/end constructs.
  Enabled: true

ParameterLists:
  Description: Avoid parameter lists longer than three or four parameters.
  Enabled: true
  Max: 5
  CountKeywordArgs: true

# Supports --auto-correct
PercentLiteralDelimiters:
  Description: Use `%`-literal delimiters consistently
  Enabled: true
  PreferredDelimiters:
    ! '%': ()
    ! '%i': ()
    ! '%q': ()
    ! '%Q': ()
    ! '%r': ! '{}'
    ! '%s': ()
    ! '%w': ()
    ! '%W': ()
    ! '%x': ()

# Supports --auto-correct
PerlBackrefs:
  Description: Avoid Perl-style regex back references.
  Enabled: true

PredicateName:
  Description: Check the names of predicate methods.
  Enabled: true
  NamePrefixBlacklist:
  - is_
  - has_
  - have_

# Supports --auto-correct
Proc:
  Description: Use proc instead of Proc.new.
  Enabled: true

RaiseArgs:
  Description: Checks the arguments passed to raise/fail.
  Enabled: true
  EnforcedStyle: exploded
  SupportedStyles:
  - compact
  - exploded

RedundantBegin:
  Description: Don't use begin blocks when they are not needed.
  Enabled: true

RedundantException:
  Description: Checks for an obsolete RuntimeException argument in raise/fail.
  Enabled: true

# Supports --auto-correct
RedundantReturn:
  Description: Don't use return where it's not required.
  Enabled: true
  AllowMultipleReturnValues: false

# Supports --auto-correct
RedundantSelf:
  Description: Don't use self where it's not needed.
  Enabled: true

RescueModifier:
  Description: Avoid using rescue in its modifier form.
  Enabled: true

RescueException:
  Description: Avoid rescuing the Exception class.
  Enabled: true

SelfAssignment:
  Description: Checks for places where self-assignment shorthand should have been used.
  Enabled: true

# Supports --auto-correct
Semicolon:
  Description: Don't use semicolons to terminate expressions.
  Enabled: true
  AllowAsExpressionSeparator: false

# Supports --auto-correct
SignalException:
  Description: Checks for proper usage of fail and raise.
  Enabled: true
  EnforcedStyle: semantic
  SupportedStyles:
  - only_raise
  - only_fail
  - semantic

SingleLineBlockParams:
  Description: Enforces the names of some block params.
  Enabled: true
  Methods:
  - reduce:
    - a
    - e
  - inject:
    - a
    - e

# Supports --auto-correct
SingleLineMethods:
  Description: Avoid single-line methods.
  Enabled: true
  AllowIfMethodIsEmpty: true

# Supports --auto-correct
SpaceAfterColon:
  Description: Use spaces after colons.
  Enabled: true

# Supports --auto-correct
SpaceAfterComma:
  Description: Use spaces after commas.
  Enabled: true

# Supports --auto-correct
SpaceAroundKeyword:
  Description: Use spaces after if/elsif/unless/while/until/case/when.
  Enabled: true

# Supports --auto-correct
SpaceAfterMethodName:
  Description: Never put a space between a method name and the opening parenthesis in
    a method definition.
  Enabled: true

# Supports --auto-correct
SpaceAfterNot:
  Description: Tracks redundant space after the ! operator.
  Enabled: true

# Supports --auto-correct
SpaceAfterSemicolon:
  Description: Use spaces after semicolons.
  Enabled: true

# Supports --auto-correct
SpaceAroundEqualsInParameterDefault:
  Description: Checks that the equals signs in parameter default assignments have or
    don't have surrounding space depending on configuration.
  Enabled: true
  EnforcedStyle: space
  SupportedStyles:
  - space
  - no_space

# Supports --auto-correct
SpaceBeforeBlockBraces:
  Description: Checks that the left block brace has or doesn't have space before it.
  Enabled: true
  EnforcedStyle: space
  SupportedStyles:
  - space
  - no_space

# Supports --auto-correct
SpaceInsideBlockBraces:
  Description: Checks that block braces have or don't have surrounding space. For blocks
    taking parameters, checks that the left brace has or doesn't have trailing space.
  Enabled: true
  EnforcedStyle: space
  SupportedStyles:
  - space
  - no_space
  EnforcedStyleForEmptyBraces: no_space
  SpaceBeforeBlockParameters: true

# Supports --auto-correct
SpecialGlobalVars:
  Description: Avoid Perl-style global variables.
  Enabled: true

SymbolArray:
  Description: Use %i or %I for arrays of symbols.
  Enabled: false

TrailingCommaInArrayLiteral:
  Description: Checks for trailing comma in parameter lists and literals.
  Enabled: true
  EnforcedStyleForMultiline: no_comma

TrivialAccessors:
  Description: Prefer attr_* methods to trivial readers/writers.
  Enabled: true
  ExactNameMatch: false
  AllowPredicates: false
  Whitelist:
  - to_ary
  - to_a
  - to_c
  - to_enum
  - to_h
  - to_hash
  - to_i
  - to_int
  - to_io
  - to_open
  - to_path
  - to_proc
  - to_r
  - to_regexp
  - to_str
  - to_s
  - to_sym

# Supports --auto-correct
VariableInterpolation:
  Description: Don't interpolate global, instance and class variables directly in strings.
  Enabled: true

VariableName:
  Description: Use the configured style when naming variables.
  Enabled: true
  EnforcedStyle: snake_case
  SupportedStyles:
  - snake_case
  - camelCase

# Supports --auto-correct
WhileUntilDo:
  Description: Checks for redundant do after while or until.
  Enabled: true

WhileUntilModifier:
  Description: Favor modifier while/until usage when you have a single-line body.
  Enabled: true

# Supports --auto-correct
WordArray:
  Description: Use %w or %W for arrays of words.
  Enabled: true
  MinSize: 0

AmbiguousOperator:
  Description: Checks for ambiguous operators in the first argument of a method invocation
    without parentheses.
  Enabled: true

AmbiguousRegexpLiteral:
  Description: Checks for ambiguous regexp literals in the first argument of a method
    invocation without parenthesis.
  Enabled: true

AssignmentInCondition:
  Description: Don't use assignment in conditions.
  Enabled: true
  AllowSafeAssignment: true

ConditionPosition:
  Description: Checks for condition placed in a confusing position relative to the keyword.
  Enabled: true

Debugger:
  Description: Check for debugger calls.
  Enabled: true

# Supports --auto-correct
DeprecatedClassMethods:
  Description: Check for deprecated class method calls.
  Enabled: true

ElseLayout:
  Description: Check for odd code arrangement in an else block.
  Enabled: true

EmptyEnsure:
  Description: Checks for empty ensure block.
  Enabled: true

EmptyInterpolation:
  Description: Checks for empty string interpolation.
  Enabled: true

EndAlignment:
  Description: Align ends correctly.
  Enabled: true
  EnforcedStyleAlignWith: keyword

EndInMethod:
  Description: END blocks should not be placed inside method definitions.
  Enabled: true

EnsureReturn:
  Description: Never use return in an ensure block.
  Enabled: true

Eval:
  Description: The use of eval represents a serious security risk.
  Enabled: true

HandleExceptions:
  Description: Don't suppress exception.
  Enabled: true

LiteralInInterpolation:
  Description: Checks for literals used in interpolation.
  Enabled: true

Loop:
  Description: Use Kernel#loop with break rather than begin/end/until or begin/end/while
    for post-loop tests.
  Enabled: true

ShadowingOuterLocalVariable:
  Description: Do not use the same name as outer local variable for block arguments
    or block local variables.
  Enabled: true

# Supports --auto-correct
StringConversionInInterpolation:
  Description: Checks for Object#to_s usage in string interpolation.
  Enabled: true

UnreachableCode:
  Description: Unreachable code.
  Enabled: true

UselessAccessModifier:
  Description: Checks for useless access modifiers.
  Enabled: true

UselessComparison:
  Description: Checks for comparison of something with itself.
  Enabled: true

UselessElseWithoutRescue:
  Description: Checks for useless `else` in `begin..end` without `rescue`.
  Enabled: true

UselessSetterCall:
  Description: Checks for useless setter call to a local variable.
  Enabled: true

Void:
  Description: Possible use of operator/literal/variable in void context.
  Enabled: true

# Supports --auto-correct
AccessModifierIndentation:
  Description: Check indentation of private/protected visibility modifiers.
  Enabled: true
  EnforcedStyle: indent
  SupportedStyles:
  - outdent
  - indent

# Supports --auto-correct
Alias:
  Description: Use alias_method instead of alias.
  Enabled: true

# Supports --auto-correct
AlignArray:
  Description: Align the elements of an array literal if they span more than one line.
  Enabled: true

# Supports --auto-correct
AlignHash:
  Description: Align the elements of a hash literal if they span more than one line.
  Enabled: true
  EnforcedHashRocketStyle: key
  EnforcedColonStyle: key
  EnforcedLastArgumentHashStyle: always_inspect
  SupportedLastArgumentHashStyles:
  - always_inspect
  - always_ignore
  - ignore_implicit
  - ignore_explicit

# Supports --auto-correct
AlignParameters:
  Description: Align the parameters of a method call if they span more than one line.
  Enabled: true
  EnforcedStyle: with_first_parameter
  SupportedStyles:
  - with_first_parameter
  - with_fixed_indentation

# Supports --auto-correct
AndOr:
  Description: Use &&/|| instead of and/or.
  Enabled: true

ArrayJoin:
  Description: Use Array#join instead of Array#*.
  Enabled: true

AsciiComments:
  Description: Use only ascii symbols in comments.
  Enabled: true

AsciiIdentifiers:
  Description: Use only ascii symbols in identifiers.
  Enabled: true

# Supports --auto-correct
Attr:
  Description: Checks for uses of Module#attr.
  Enabled: true

BeginBlock:
  Description: Avoid the use of BEGIN blocks.
  Enabled: true

BlockComments:
  Description: Do not use block comments.
  Enabled: true

FormatStringToken:
  Description: Use a consistent style for named format string tokens.
  EnforcedStyle: unannotated

UncommunicativeMethodParamName:
  Description: Checks method parameter names for how descriptive they are.
  Enabled: true
  MinNameLength: 3
  AllowNamesEndingInNumbers: true
  AllowedNames:
    - io
    - id
    - to
